// TIM3_CH2-> Output compary  PA5
// TIM4_CH3-> input capture  PB4



#include"stm32f4xx.h"
int timestamp = 0; int hold =1 ;

int main(void)
{
	 //configure PA5 as a output of TIM3 CH2
    RCC->AHB1ENR |= 1;   // enable GPIO clock
    GPIOC->MODER |=0xC000;    // clear pin mode
    GPIOC->MODER |= 0x8000;   //set Pin to Alternate function
    GPIOC->AFR[0] &=~ 0xF0000000;   // clear pin AF bits
    GPIOC->AFR[0] |= 0x20000000;   // set pin to AF1 for TIM3 ch2


    //configure to TIM1 wrap around at 1 hz
   // and toggle CH1 when output value is 0

     RCC->APB1ENR |=1;       // ENABLE TIM3 clock
     TIM3->PSC = 1600 - 1;   // divided by 1600
     TIM3->ARR = 10000-1;    // divided by 1000
     TIM3->CCMR1 = 0X30;     //  set output to toggle pin match
     TIM3->CCR1 = 0;         //  set match value
     TIM3->CCER |= 1;        //  enable  CH1 Compare mode
     TIM3->CNT = 0;          // clear counter
      TIM3->CR1 = 1;        //  enable TIM3


 //  configure PA5 as a  input for TIM3 CH1

      RCC->AHB1ENR |=1;                  // Enable GPIO Clock
      GPIOA->MODER  &= ~0X3000;           // CLEAR PIN MODE
      GPIOA->MODER |=  0x3000;           // set pin to alternate fun.
      GPIOA->AFR[0]  &=  -(0xf<<24);     // clear pin AF bits
      GPIOA->AFR[0]  |= (1<<25);         // set Pin to AF2 for TIM3 CH1




  // configure to TIM3 to do input capture  with  prescaler .....**////////
      RCC->APB1ENR |=2;
      TIM3->PSC = 16000;
      TIM3->CCMR1  = 0X41;
      TIM3->CCER = 1;
      TIM3->CR1 = 1;
      while(1)
      {
      while (!(TIM3->SR & 2)){}
      timestamp = TIM3->CCR1;
       }

}
